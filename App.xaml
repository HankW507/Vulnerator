<Application x:Class="Vulnerator.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:IconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:Vulnerator.View.UI"
             xmlns:viewHelper="clr-namespace:Vulnerator.View.ViewHelper"
             xmlns:vm="clr-namespace:Vulnerator.ViewModel"
             d1p1:Ignorable="d"
             StartupUri="View/Views/DevWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Clean/CleanWindow.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml" />
                <ResourceDictionary>
                    <vm:ViewModelLocator x:Key="Locator"
                                         d:IsDataSource="True" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <vm:MainWindowViewModel x:Key="MainWindowViewModel" />
            <Style x:Key="SecondLevelHeaderStyle"
                   TargetType="Label">
                <Setter Property="FontSize"
                        Value="16" />
                <Setter Property="HorizontalAlignment"
                        Value="Left" />
            </Style>
            <Style x:Key="TopLevelHeaderStyle"
                   TargetType="Label">
                <Setter Property="FontSize"
                        Value="22" />
                <Setter Property="HorizontalAlignment"
                        Value="Left" />
            </Style>
            <Style x:Key="TrimmingTextboxStyle"
                   BasedOn="{StaticResource MetroTextBox}"
                   TargetType="TextBox">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}"
                                 Value="False">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TextBox">
                                    <TextBlock VerticalAlignment="Center"
                                               Background="Transparent"
                                               Text="{TemplateBinding Text}"
                                               TextTrimming="CharacterEllipsis" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="VerticalContentAlignment"
                                Value="Center" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="HyperlinkTextBlockStyle"
                   BasedOn="{StaticResource MetroTextBlock}"
                   TargetType="TextBlock">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                             Value="True">
                        <Setter Property="Foreground"
                                Value="{DynamicResource AccentColorBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="HyperlinkStatusBarItemStyle"
                   TargetType="StatusBarItem">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                             Value="True">
                        <Setter Property="Foreground"
                                Value="{DynamicResource AccentColorBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="BlankButtonStyle"
                   BasedOn="{StaticResource MetroButton}"
                   TargetType="{x:Type Button}">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="BorderThickness"
                        Value="0" />
                <Setter Property="FontFamily"
                        Value="{StaticResource DefaultFont}" />
                <Setter Property="FontSize"
                        Value="12" />
                <Setter Property="FontWeight"
                        Value="Normal" />
                <Setter Property="Margin"
                        Value="5" />
            </Style>
            <Style x:Key="ThemeSwatchStyle"
                   TargetType="{x:Type Rectangle}">
                <Setter Property="Height"
                        Value="100" />
                <Setter Property="HorizontalAlignment"
                        Value="Center" />
                <Setter Property="Margin"
                        Value="5,0" />
                <Setter Property="RadiusX"
                        Value="50" />
                <Setter Property="RadiusY"
                        Value="50" />
                <Setter Property="Stroke"
                        Value="Transparent" />
                <Setter Property="VerticalAlignment"
                        Value="Top" />
                <Setter Property="Width"
                        Value="100" />
            </Style>
            <Style x:Key="GreyBorderedDataGridStyle"
                   BasedOn="{StaticResource MetroDataGrid}"
                   TargetType="{x:Type DataGrid}">
                <Setter Property="BorderBrush"
                        Value="{DynamicResource TextBoxBorderBrush}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="Controls:ControlsHelper.FocusBorderBrush"
                        Value="{DynamicResource TextBoxFocusBorderBrush}" />
            </Style>
            <Style x:Key="greyListBoxStyle"
                   BasedOn="{StaticResource MetroListBox}"
                   TargetType="{x:Type ListBox}">
                <Setter Property="BorderBrush"
                        Value="{DynamicResource TextBoxBorderBrush}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="Controls:ControlsHelper.FocusBorderBrush"
                        Value="{DynamicResource TextBoxFocusBorderBrush}" />
            </Style>
            <Style x:Key="SplitButtonStyle"
                   TargetType="{x:Type Controls:SplitButton}">
                <Setter Property="Background"
                        Value="{DynamicResource GrayBrush10}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource TextBoxBorderBrush}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="Controls:ControlsHelper.ContentCharacterCasing"
                        Value="Upper" />
                <Setter Property="Controls:ControlsHelper.CornerRadius"
                        Value="3" />
                <Setter Property="FontFamily"
                        Value="{DynamicResource DefaultFont}" />
                <Setter Property="FontSize"
                        Value="{DynamicResource UpperCaseContentFontSize}" />
                <Setter Property="FontWeight"
                        Value="Bold" />
                <Setter Property="Foreground"
                        Value="{DynamicResource TextBrush}" />
                <Setter Property="MinHeight"
                        Value="25" />
                <Setter Property="Padding"
                        Value="2,3" />
            </Style>
            <DataTemplate x:Key="HamburgerMenuItem"
                          DataType="{x:Type Controls:HamburgerMenuIconItem}">
                <Grid Height="48">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl Grid.Column="0"
                                    Content="{Binding Icon}"
                                    Focusable="False" />
                    <TextBlock Grid.Column="1"
                               VerticalAlignment="Center"
                               Text="{Binding Label}" />
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </Application.Resources>
</Application>