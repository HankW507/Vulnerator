<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Notifications="clr-namespace:Enterwell.Clients.Wpf.Notifications.Controls;assembly=Enterwell.Clients.Wpf.Notifications"
                    xmlns:local="clr-namespace:Vulnerator.View.Styles">

    <Style x:Key="NotificationBadgeBaseStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="10,2,0,2" />
        <Setter Property="Padding" Value="4,2" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>
    
    <Style x:Key="NotificationHeaderTextStyle"
           TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Notifications:NotificationMessage}}, Path=Foreground}" />
        <Setter Property="Margin" Value="0,0,8,0" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="NotificationMessageTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Notifications:NotificationMessage}}, Path=Foreground}" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="0,0,8,0" />
    </Style>

    <Style x:Key="NotificationMessageButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
        <Setter Property="Padding" Value="12,2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="backgroundBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True" />
                        <Border
                            x:Name="backgroundOverlay"
                            BorderThickness="0"
                            Opacity="0.3"
                            SnapsToDevicePixels="True" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter TargetName="backgroundBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrush}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="backgroundOverlay" Property="Background" Value="{StaticResource NotificationButtonDarkBackgroundOverlayBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="backgroundOverlay" Property="Background" Value="{StaticResource NotificationButtonDarkBackgroundOverlayPressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="backgroundOverlay" Property="Background" Value="{StaticResource NotificationButtonDarkBackgroundOverlayDisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Notifications:NotificationMessage}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Notifications:NotificationMessage}">
                    <Border MinHeight="35"
                            VerticalAlignment="Top"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource TextBrush}"
                            BorderThickness="1"
                            SnapsToDevicePixels="True"
                            UseLayoutRounding="True">
                        <Grid>
                            <Grid.Resources>
                                <!--  Accent button style  -->
                                <Style BasedOn="{StaticResource NotificationMessageButtonStyle}"
                                       TargetType="{x:Type Notifications:NotificationMessageButton}">
                                    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Notifications:NotificationMessage}}, Path=ButtonAccentBrush}" />
                                </Style>
                                <!--  Accent badge style  -->
                                <Style x:Key="NotificationBadgeAccentStyle"
                                       BasedOn="{StaticResource NotificationBadgeBaseStyle}"
                                       TargetType="{x:Type TextBlock}">
                                    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Notifications:NotificationMessage}}, Path=BadgeAccentBrush}" />
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!--  Badge  -->
                            <TextBlock Grid.Column="0"
                                       Style="{StaticResource NotificationBadgeAccentStyle}"
                                       Text="{TemplateBinding BadgeText}"
                                       Visibility="{TemplateBinding BadgeVisibility}" />

                            <!--  Overlay content  -->
                            <ContentControl Grid.Column="0"
                                            Grid.ColumnSpan="3"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Content="{TemplateBinding OverlayContent}" />

                            <!--  Header and message  -->
                            <Grid Grid.Column="1"
                                  Margin="10,8">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0"
                                           Style="{StaticResource NotificationHeaderTextStyle}"
                                           Text="{TemplateBinding Header}"
                                           Visibility="{TemplateBinding HeaderVisibility}" />

                                <TextBlock Grid.Row="1"
                                           Style="{StaticResource NotificationMessageTextStyle}"
                                           Text="{TemplateBinding Message}"
                                           Visibility="{TemplateBinding MessageVisibility}" />
                            </Grid>

                            <!--  Buttons  -->
                            <ItemsControl Grid.Column="2"
                                          ItemsSource="{TemplateBinding Buttons}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="local:INotificationMessageButton">
                                        <Button Content="{Binding Content}"
                                                IsEnabled="{Binding IsEnabled}" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>